<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>正常下班与不正常下班</title>
    <link href="/2024/07/05/%E6%AD%A3%E5%B8%B8%E4%B8%8B%E7%8F%AD%E4%B8%8E%E4%B8%8D%E6%AD%A3%E5%B8%B8%E4%B8%8B%E7%8F%AD/"/>
    <url>/2024/07/05/%E6%AD%A3%E5%B8%B8%E4%B8%8B%E7%8F%AD%E4%B8%8E%E4%B8%8D%E6%AD%A3%E5%B8%B8%E4%B8%8B%E7%8F%AD/</url>
    
    <content type="html"><![CDATA[<h2 id="采集两张照片，同事下班路上所拍"><a href="#采集两张照片，同事下班路上所拍" class="headerlink" title="采集两张照片，同事下班路上所拍"></a>采集两张照片，同事下班路上所拍</h2><p><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240705202030.png"><br><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240705202135.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>单链表排序-常见算法100题</title>
    <link href="/2024/07/04/%E5%8D%95%E9%93%BE%E8%A1%A8%E6%8E%92%E5%BA%8F-%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95100%E9%A2%98/"/>
    <url>/2024/07/04/%E5%8D%95%E9%93%BE%E8%A1%A8%E6%8E%92%E5%BA%8F-%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95100%E9%A2%98/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>常见的mysql面试题</title>
    <link href="/2024/07/04/%E5%B8%B8%E8%A7%81%E7%9A%84mysql%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/2024/07/04/%E5%B8%B8%E8%A7%81%E7%9A%84mysql%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mysql基础知识学习</title>
    <link href="/2024/07/04/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/04/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mongo集群搭建与异常恢复</title>
    <link href="/2024/07/04/mongo%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%BC%82%E5%B8%B8%E6%81%A2%E5%A4%8D/"/>
    <url>/2024/07/04/mongo%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%BC%82%E5%B8%B8%E6%81%A2%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>mongo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mongo基础知识学习</title>
    <link href="/2024/07/04/mongo%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/04/mongo%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><h3 id="1-1-MongoDB简介"><a href="#1-1-MongoDB简介" class="headerlink" title="1.1 MongoDB简介"></a>1.1 MongoDB简介</h3><p>什么是MongoDB<br>MongoDB是一个开源的NoSQL数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。MongoDB是介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。<br>MongoDB的特点和优势<br>MongoDB具有以下特点和优势：</p><ol><li>高性能</li><li>丰富的数据类型</li><li>丰富的查询语言</li><li>丰富的存储引擎</li><li>丰富的索引类型</li><li>丰富的数据备份和恢复工具</li><li>丰富的数据迁移工具</li><li>丰富的数据可视化工具</li></ol><h2 id="二、安装与配置"><a href="#二、安装与配置" class="headerlink" title="二、安装与配置"></a>二、安装与配置</h2><h3 id="2-1-环境要求"><a href="#2-1-环境要求" class="headerlink" title="2.1 环境要求"></a>2.1 环境要求</h3><h3 id="2-2-安装MongoDB"><a href="#2-2-安装MongoDB" class="headerlink" title="2.2 安装MongoDB"></a>2.2 安装MongoDB</h3><p>访问mongodb官网下载安装包，选择适合的版本安装。<br><a href="https://www.mongodb.com/try/download/community-edition/releases">https://www.mongodb.com/try/download/community-edition/releases</a></p><h3 id="2-3-启动与配置"><a href="#2-3-启动与配置" class="headerlink" title="2.3 启动与配置"></a>2.3 启动与配置</h3><h4 id="启动MongoDB服务"><a href="#启动MongoDB服务" class="headerlink" title="启动MongoDB服务"></a>启动MongoDB服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./mongod -f /etc/mongod.conf --fork<br></code></pre></td></tr></table></figure><h4 id="基本配置文件介绍"><a href="#基本配置文件介绍" class="headerlink" title="基本配置文件介绍"></a>基本配置文件介绍</h4><p>配置文件目录<br>&#x2F;etc&#x2F;mongod.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">storage <br>dbPath: 数据库文件存放路径。<br>journal.enabled: 是否启用日志，以确保写操作的持久性。<br>engine: 使用的存储引擎（例如 wiredTiger）。<br>wiredTiger.engineConfig.cacheSizeGB: 为 WiredTiger 存储引擎配置的缓存大小。<br><br>systemLog<br>destination: 日志的存放目标（例如 file）。<br>logAppend: 是否追加到现有日志文件（而不是覆盖）。<br>path: 日志文件路径。<br><br>net<br>port: MongoDB 监听的端口号。<br>bindIp: 绑定的 IP 地址（例如 127.0.0.1 只允许本地访问）。<br><br>processManagement<br>fork: 是否以守护进程方式运行。<br>pidFilePath: 进程 ID 文件路径。<br><br>security<br>authorization: 是否启用用户验证和权限控制。<br><br>replication<br>replSetName: 配置副本集的名字。<br><br>sharding<br>clusterRole: 节点在分片集群中的角色（例如 shardsvr 表示作为分片服务器）。<br><br>operationProfiling<br>mode: 操作分析模式（例如 slowOp 记录慢查询）。<br>slowOpThresholdMs: 慢操作的阈值（毫秒）。<br><br>setParameter<br>enableLocalhostAuthBypass: 是否启用本地身份验证绕过。<br><br>1auditLog<br>destination: 审计日志的存放目标。<br>path: 审计日志文件路径。<br>format: 审计日志的格式（例如 JSON）。<br></code></pre></td></tr></table></figure><h4 id="常用配置选项"><a href="#常用配置选项" class="headerlink" title="常用配置选项"></a>常用配置选项</h4><p>数据量储存路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dbPath: /home/work/sys-mongo/data_1<br></code></pre></td></tr></table></figure><p>日志储存路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">path:  /home/work/sys-mongo/logs/mongodb_1.log<br></code></pre></td></tr></table></figure><p>监听端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">net:<br>  port: 8881<br>  bindIp: 0.0.0.0<br></code></pre></td></tr></table></figure><h2 id="三、基本概念"><a href="#三、基本概念" class="headerlink" title="三、基本概念"></a>三、基本概念</h2><h3 id="3-1-数据库"><a href="#3-1-数据库" class="headerlink" title="3.1 数据库"></a>3.1 数据库</h3><h4 id="创建与删除数据库"><a href="#创建与删除数据库" class="headerlink" title="创建与删除数据库"></a>创建与删除数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建数据库&amp;选择数据库（每次进程数据库操作的时候都需要先选择数据库）</span><br>use test<br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除数据库</span> <br><span class="hljs-meta prompt_"># </span><span class="language-bash">用于删除当前选定数据库及其所有数据集合和索引。这个操作是不可逆的，一旦执行，数据库中的所有数据将被永久删除</span><br>db.dropDatabase() <br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取集合名称</span><br>db.getCollectionNames() <br>show collections<br></code></pre></td></tr></table></figure><h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">直接use 切换到想看的数据库</span><br>use test<br></code></pre></td></tr></table></figure><h3 id="3-2-集合"><a href="#3-2-集合" class="headerlink" title="3.2 集合"></a>3.2 集合</h3><h4 id="创建与删除集合"><a href="#创建与删除集合" class="headerlink" title="创建与删除集合"></a>创建与删除集合</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建集合</span><br>db.createCollection(&#x27;test&#x27;)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除集合</span><br>db.getCollection(&#x27;test&#x27;).drop()<br></code></pre></td></tr></table></figure><h4 id="集合的命名规则"><a href="#集合的命名规则" class="headerlink" title="集合的命名规则"></a>集合的命名规则</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">集合名称不能以数字开头，不能包含空格，不能包含.，不能包含$，不能包含/，不能包含\，不能包含\0，不能包含\r，不能包含\n，不能包含\t，不能包含\u0000，不能包含\uFFFE，不能包含\uFFFF，不能包含\u2028，不能包含\u2029，不能包含\uFEFF，不能包含\uFFFE，不能包含\uFFFF，不能包含\u2028，不能包含\u2029，不能包含\<br></code></pre></td></tr></table></figure><h3 id="3-3-文档"><a href="#3-3-文档" class="headerlink" title="3.3 文档"></a>3.3 文档</h3><h4 id="文档的数据类型"><a href="#文档的数据类型" class="headerlink" title="文档的数据类型"></a>文档的数据类型</h4><p>String<br>描述: 用于存储文本数据。字符串必须是有效的 UTF-8。<br>示例: “name”: “Alice”</p><p>Number<br>描述: 包括整数和浮点数。MongoDB 支持 32 位和 64 位整数以及双精度浮点数。<br>示例: “age”: 30, “height”: 5.7</p><p>Boolean<br>描述: 用于存储布尔值（真&#x2F;假）。<br>示例: “isActive”: true</p><p>Document<br>描述: 内嵌的文档，相当于 JSON 对象。可以包含键值对，支持嵌套。<br>示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;street&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;123 Main St&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;city&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Springfield&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>Array<br>描述: 数组，可以包含多个值，值的类型可以不同。<br>示例: “hobbies”: [“reading”, “traveling”, “swimming”]</p><p>ObjectId<br>描述: MongoDB 的默认唯一标识符。由 12 字节的十六进制值组成，自动生成。<br>示例: “_id”: ObjectId(“507f1f77bcf86cd799439011”)</p><p>Date<br>描述: 用于存储日期和时间。存储为自 Unix 纪元（1970 年 1 月 1 日）以来的毫秒数。<br>示例: “createdAt”: ISODate(“2023-07-05T12:00:00Z”)</p><p>Null<br>描述: 用于表示空值或不存在的字段。<br>示例: “middleName”: null</p><p>Regular Expression<br>描述: 存储正则表达式，用于模式匹配。<br>示例: “pattern”: &#x2F;abc&#x2F;i</p><p>Binary Data<br>描述: 存储二进制数据。<br>示例: “fileData”: BinData(0, “…”)</p><p>Timestamp<br>描述: 特殊的时间戳类型，用于内部 MongoDB 操作。<br>示例: “ts”: Timestamp(1609459200, 1)</p><p>MinKey and MaxKey<br>描述: 用于比较值时的特殊类型，MinKey 表示最小值，MaxKey 表示最大值。<br>示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;minValue&quot;</span><span class="hljs-punctuation">:</span> MinKey()<span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;maxValue&quot;</span><span class="hljs-punctuation">:</span> MaxKey()<br></code></pre></td></tr></table></figure><p>Decimal128<br>描述: 高精度的 128 位十进制浮点数。<br>示例: “largeNumber”: NumberDecimal(“12345.6789”)</p><p>JavaScript Code<br>描述: 存储 JavaScript 代码，可以包含作用域。<br>示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> Code(<span class="hljs-string">&quot;function() &#123; return true; &#125;&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="四、CRUD操作"><a href="#四、CRUD操作" class="headerlink" title="四、CRUD操作"></a>四、CRUD操作</h2><h3 id="4-1-创建操作（Create）"><a href="#4-1-创建操作（Create）" class="headerlink" title="4.1 创建操作（Create）"></a>4.1 创建操作（Create）</h3><h4 id="插入单个文档"><a href="#插入单个文档" class="headerlink" title="插入单个文档"></a>插入单个文档</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">db.collection.insertOne(&#123; &quot;name&quot;: &quot;John Doe&quot;, &quot;age&quot;: 30 &#125;)<br></code></pre></td></tr></table></figure><h4 id="插入多个文档"><a href="#插入多个文档" class="headerlink" title="插入多个文档"></a>插入多个文档</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">db.collection.insertMany([<br>    &#123; &quot;name&quot;: &quot;John Doe&quot;, &quot;age&quot;: 30 &#125;,<br>    &#123; &quot;name&quot;: &quot;Jane Doe&quot;, &quot;age&quot;: 28 &#125;<br>    ])<br></code></pre></td></tr></table></figure><h3 id="4-2-读取操作（Read）"><a href="#4-2-读取操作（Read）" class="headerlink" title="4.2 读取操作（Read）"></a>4.2 读取操作（Read）</h3><h4 id="查询单个文档"><a href="#查询单个文档" class="headerlink" title="查询单个文档"></a>查询单个文档</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">db.collection.findOne(&#123; &quot;name&quot;: &quot;John Doe&quot; &#125;)<br></code></pre></td></tr></table></figure><h4 id="查询多个文档"><a href="#查询多个文档" class="headerlink" title="查询多个文档"></a>查询多个文档</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">db.collection.find(&#123; &quot;age&quot;: &#123; $gt: 30 &#125; &#125;)<br></code></pre></td></tr></table></figure><h4 id="使用查询条件-重点常用"><a href="#使用查询条件-重点常用" class="headerlink" title="使用查询条件(重点常用)"></a>使用查询条件(重点常用)</h4><h5 id="等于条件"><a href="#等于条件" class="headerlink" title="等于条件"></a>等于条件</h5><p>语法: { field: value }<br>示例: 查找 name 等于 “Alice” 的文档</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">collection</span>.<span class="hljs-title function_">find</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Alice&quot;</span> &#125;)<br></code></pre></td></tr></table></figure><p>小于&#x2F;小于等于、大于&#x2F;大于等于</p><p>语法:<br>小于: { field: { $lt: value } }<br>小于等于: { field: { $lte: value } }<br>大于: { field: { $gt: value } }<br>大于等于: { field: { $gte: value } }<br>示例: 查找年龄小于 30 的文档<br>javascript<br>复制代码<br>db.collection.find({ age: { $lt: 30 } })<br>不等于条件</p><p>语法: { field: { $ne: value } }<br>示例: 查找 name 不等于 “Alice” 的文档<br>javascript<br>复制代码<br>db.collection.find({ name: { $ne: “Alice” } })<br>包含条件</p><p>语法: { field: { $in: [value1, value2, …] } }<br>示例: 查找年龄是 25 或 30 的文档<br>javascript<br>复制代码<br>db.collection.find({ age: { $in: [25, 30] } })<br>不包含条件</p><p>语法: { field: { $nin: [value1, value2, …] } }<br>示例: 查找年龄不是 25 或 30 的文档<br>javascript<br>复制代码<br>db.collection.find({ age: { $nin: [25, 30] } })<br>逻辑与条件</p><p>语法: { $and: [ { condition1 }, { condition2 }, … ] }<br>示例: 查找年龄大于 25 并且 name 是 “Alice” 的文档<br>javascript<br>复制代码<br>db.collection.find({ $and: [ { age: { $gt: 25 } }, { name: “Alice” } ] })<br>逻辑或条件</p><p>语法: { $or: [ { condition1 }, { condition2 }, … ] }<br>示例: 查找年龄大于 25 或 name 是 “Alice” 的文档<br>javascript<br>复制代码<br>db.collection.find({ $or: [ { age: { $gt: 25 } }, { name: “Alice” } ] })<br>存在条件</p><p>语法: { field: { $exists: boolean } }<br>示例: 查找包含 address 字段的文档<br>javascript<br>复制代码<br>db.collection.find({ address: { $exists: true } })<br>正则表达式</p><p>语法: { field: { $regex: &#x2F;pattern&#x2F;, $options: ‘options’ } }<br>示例: 查找 name 以 “A” 开头的文档<br>javascript<br>复制代码<br>db.collection.find({ name: { $regex: &#x2F;^A&#x2F; } })<br>类型条件</p><p>语法: { field: { $type: type } }<br>示例: 查找 age 字段为数字类型的文档<br>javascript<br>复制代码<br>db.collection.find({ age: { $type: “number” } })</p><p>投影<br>4.3 更新操作（Update）<br>更新单个文档<br>更新多个文档<br>更新操作符<br>4.4 删除操作（Delete）<br>删除单个文档<br>删除多个文档<br>删除条件<br>五、高级查询<br>5.1 查询操作符<br>比较操作符<br>逻辑操作符<br>5.2 索引<br>索引的作用<br>创建与删除索引<br>索引的类型<br>5.3 聚合<br>聚合框架简介<br>常用聚合操作符<br>管道操作符<br>六、性能优化<br>6.1 索引优化<br>使用索引提高查询性能<br>分析索引使用情况<br>6.2 分片<br>分片的概念<br>分片的实现<br>6.3 复制集<br>复制集的概念<br>配置复制集<br>七、安全与备份<br>7.1 用户认证<br>创建用户<br>角色与权限<br>7.2 数据备份<br>备份工具介绍<br>备份与恢复操作<br>八、实战案例<br>8.1 项目介绍<br>项目的背景与需求<br>8.2 实现步骤<br>数据库设计<br>数据操作<br>性能优化<br>安全配置<br>九、总结<br>9.1 回顾与总结<br>主要知识点回顾<br>常见问题与解决方案<br>9.2 学习资源<br>官方文档<br>在线课程<br>书籍推荐<br>十、附录<br>10.1 常用命令速查表<br>10.2 参考资料与链接<br>结语<br>鼓励继续深入学习<br>邀请读者留言讨论</p>]]></content>
    
    
    
    <tags>
      
      <tag>mongo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/04/hello-world/"/>
    <url>/2024/07/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo常用指令</title>
    <link href="/2024/07/01/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2024/07/01/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的静态博客框架，很多人用它来搭建个人博客。以下是一些 Hexo 常用的指令及其说明</p><h3 id="初始化与配置"><a href="#初始化与配置" class="headerlink" title="初始化与配置"></a>初始化与配置</h3><p>初始化 Hexo 项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br></code></pre></td></tr></table></figure><h3 id="常用操作指令"><a href="#常用操作指令" class="headerlink" title="常用操作指令"></a>常用操作指令</h3><p>1、生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>2、启动本地服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>默认情况下，Hexo 会在本地的 <a href="http://localhost:4000/">http://localhost:4000</a> 启动一个预览服务器。</p><p>3、清理缓存文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure><p>4、部署到远程服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>github+hexo搭建博客教程</title>
    <link href="/2024/06/25/github-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <url>/2024/06/25/github-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="一、申请github账号"><a href="#一、申请github账号" class="headerlink" title="一、申请github账号"></a>一、申请github账号</h3><p>注意：绑定本地ssh公钥，具体可以搜相关教程</p><h3 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h3><p>点击new创建仓库<br><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240704200959.png"></p><p>填写项目名称，这里很关键必须是<br>[用户名称].github.io<br>举例子：xxxxx.github.io</p><p><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240704201149.png"></p><h3 id="三、安装npm"><a href="#三、安装npm" class="headerlink" title="三、安装npm"></a>三、安装npm</h3><p>根据不同的系统安装npm，自己查相关教程</p><h3 id="四、安装hexo"><a href="#四、安装hexo" class="headerlink" title="四、安装hexo"></a>四、安装hexo</h3><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h4 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init blog<br></code></pre></td></tr></table></figure><h4 id="清理缓存文件"><a href="#清理缓存文件" class="headerlink" title="清理缓存文件"></a>清理缓存文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br></code></pre></td></tr></table></figure><h4 id="生成博客静态文件"><a href="#生成博客静态文件" class="headerlink" title="生成博客静态文件"></a>生成博客静态文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g<br></code></pre></td></tr></table></figure><h4 id="本地调试启动"><a href="#本地调试启动" class="headerlink" title="本地调试启动"></a>本地调试启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo s<br></code></pre></td></tr></table></figure><h4 id="配置github地址"><a href="#配置github地址" class="headerlink" title="配置github地址"></a>配置github地址</h4><p><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240704202819.png"></p><h4 id="安装git插件"><a href="#安装git插件" class="headerlink" title="安装git插件"></a>安装git插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h4 id="上传github"><a href="#上传github" class="headerlink" title="上传github"></a>上传github</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo d<br></code></pre></td></tr></table></figure><h4 id="在github配置信息"><a href="#在github配置信息" class="headerlink" title="在github配置信息"></a>在github配置信息</h4><p>进入项目目录点击setting</p><p><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240704203120.png"></p><p>设置默认分支</p><p><img src="https://chenyuoss1.oss-cn-beijing.aliyuncs.com/img/20240704203204.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HEXO博客的初步使用</title>
    <link href="/2024/06/25/HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/06/25/HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="测试使用"><a href="#测试使用" class="headerlink" title="测试使用"></a>测试使用</h2><p>这是我的第一个hexo博客，测试使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
